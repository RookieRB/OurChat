<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.ourchat.mapper.UserMapper">

    <insert id="insertUser" useGeneratedKeys="true" keyProperty="user_id" parameterType="com.example.ourchat.entity.User">
        insert into users (username,nickname,password,email,is_active,img_url)
        VALUES (#{username},#{nickname},#{password},#{email},#{isActive},#{imgUrl})
    </insert>
    <select id="getFriendsById" resultType="com.example.ourchat.vo.FriendVO">
        select u.user_id,u.nickname,u.img_url,u.is_active,u.last_login,u.email,u.phone
        from users as u
        inner join friends as f
        on u.user_id = f.friend_id
        where f.user_id = #{userId}
    </select>
    <select id="getRoomsByUserId" resultType="com.example.ourchat.entity.Room">
        SELECT * from chat_rooms as cr join user_chat_rooms as ucr on cr.room_id = ucr.room_id where ucr.user_id = #{userId}
    </select>
    <select id="getMessageFromTo" resultType="com.example.ourchat.entity.PrivateMessage">
        SELECT * from private_messages as p where (p.sender_id = #{currentId} and p.receiver_id = #{userId}) or  (p.sender_id = #{userId} and p.receiver_id = #{currentId}) order by p.sent_at desc LIMIT 5
    </select>
</mapper>